<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AEAQBAEB/9k=
</value>
  </data>
</root>